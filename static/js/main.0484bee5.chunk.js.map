{"version":3,"sources":["actions.js","addnomberFolder/addNomber.js","contactsFolder/ContactsItem.js","contactsFolder/Contacts.js","filterFolder/Filter.js","phonebookFolder/Phonebook.js","reduce.js","store.js","index.js"],"names":["addContact","createAction","name","number","payload","contact","id","uuid","removeContact","inputChangeContact","AddNomber","state","handleChange","e","setState","target","value","handleChangeNumber","handleSubmit","preventDefault","props","onAddTask","onSubmit","this","type","onChange","Component","mapDispatchToProps","actions","connect","ownProps","item","contacts","items","find","dispatch","onRemoveTask","onClick","normalizedFilter","filter","toLowerCase","contactsAll","includes","TransitionGroup","component","className","map","CSSTransition","key","timeout","classNames","searchAll","Phonebook","in","appear","unmountOnExit","React","createReducer","action","combineReducers","store","configureStore","reducer","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0484bee5.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport { uuid } from \"uuidv4\";\r\n\r\nconst addContact = createAction(\"contact/add\", ({ name, number }) => ({\r\n  payload: {\r\n    contact: {\r\n      id: uuid(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}))\r\n\r\nconst removeContact = createAction(\"contact/remove\");\r\nconst inputChangeContact = createAction(\"contact/search\");\r\n\r\n\r\nexport default {\r\n  addContact,\r\n  removeContact,\r\n  inputChangeContact,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../actions\";\r\n\r\nclass AddNomber extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      name: e.target.value, \r\n    });\r\n  };\r\n\r\n  handleChangeNumber = (e) => {\r\n    this.setState({\r\n      number: e.target.value, \r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddTask(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name \r\n          <input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.number}\r\n            onChange={this.handleChangeNumber}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddTask: actions.addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddNomber);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport actions from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ContactsItem = ({ name, number, onRemoveTask }) => (\r\n    <li>\r\n      <p>\r\n        {name} {number}\r\n      </p>\r\n      <button type=\"button\" onClick={onRemoveTask}>\r\n        Удалить\r\n      </button>\r\n    </li>\r\n);\r\n\r\nContactsItem.propTypes = {\r\n  // id: PropTypes.string.isRequired,\r\n  // name: PropTypes.string.isRequired,\r\n  // number: PropTypes.string.isRequired,\r\n  onRemoveTask: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const item = state.contacts.items.find(item => item.id === ownProps.id);\r\n   return {\r\n     ...item,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemoveTask: () => dispatch(actions.removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsItem);","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport \"./FadeStyles.css\";\r\nimport ContactsItem from \"./ContactsItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Contacts = ({ contactsAll }) => (\r\n  <TransitionGroup component=\"ul\" className=\"fade\">\r\n    {contactsAll.map(({ id }) => (\r\n      <CSSTransition key={id} timeout={250} classNames=\"fade\">\r\n        <ContactsItem\r\n          id={id}\r\n          key={id}\r\n        />\r\n      </CSSTransition>\r\n    ))}\r\n  </TransitionGroup>\r\n);\r\n\r\nContacts.propTypes = {\r\n  contactsAll: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\nconst visibleContacts = items.filter(contact =>\r\n  contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n  return {\r\n    contactsAll: visibleContacts,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Contacts);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../actions\";\r\n\r\nconst Filter = ({ searchAll, inputChangeContact }) => (\r\n  <div>\r\n    <input\r\n      type=\"text\"\r\n      value={searchAll}\r\n      onChange={(e) => inputChangeContact(e.target.value)}\r\n    />\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchAll: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  inputChangeContact: actions.inputChangeContact,\r\n};\r\n\r\nFilter.propTypes = {\r\n  searchAll: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport AddNomber from \"../addnomberFolder/addNomber\";\r\nimport Contacts from \"../contactsFolder/Contacts\";\r\nimport Filter from \"../filterFolder/Filter\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./MyStyles.css\";\r\n\r\nexport default class Phonebook extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          classNames=\"my\"\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <h1>Phonebook</h1>\r\n        </CSSTransition>\r\n        <AddNomber />\r\n        <p>Search</p>\r\n        <Filter />\r\n        <p>Contacts</p>\r\n        <Contacts />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\n\r\nconst addContact = (state, action) => {\r\n  return [...state, action.payload.contact];\r\n};\r\n\r\nconst removeContact = (state, action) => {\r\n  return state.filter(contact => contact.id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: addContact,\r\n  [actions.removeContact]: removeContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.inputChangeContact]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import reducers from \"./reduce\";\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: reducers\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Phonebook from \"./phonebookFolder/Phonebook\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Phonebook />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}